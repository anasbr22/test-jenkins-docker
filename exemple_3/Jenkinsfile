pipeline {
    agent any

    tools {
        nodejs 'nodejs-23'
    }

    environment {
        IMAGE_NAME = 'calculator-app'
        CONTAINER_NAME = 'calculator-app-container'
        REGISTRY = 'docker.io'
        REPOSITORY = 'anasbr22/calculator-app'
        PORT = '5000'
        LOCAL_ARTIFACTS_PATH = '/home/anas/Desktop/artifacts-jenkins/output.log'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Cloner le repository contenant l'application
                    git url: 'https://github.com/anasbr22/test-jenkins-docker.git', branch: 'main'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    // Accéder au dossier 'exemple_3' et installer les dépendances
                    dir('exemple_3') {
                        sh 'npm install'  // Utiliser npm pour installer les dépendances
                    }
                }
            }
        }

       /*  stage('Run Tests') {
            steps {
                script {
                    // Exécuter les tests unitaires avec Mocha
                    dir('exemple_3') {
                        sh 'npm test'  
                    }
                }
            }
        } */

        stage('Stop Existing Container') {
            steps {
                // Arrêter et supprimer un conteneur existant
                sh "docker stop ${CONTAINER_NAME} || true"
                sh "docker rm ${CONTAINER_NAME} || true"
            }
        }

        stage('Remove Old Docker Image') {
            steps {
                script {
                    // Suppression de l'image si elle existe déjà
                    sh "docker rmi -f ${IMAGE_NAME} || true"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Construire l'image Docker avec un nom fixe
                    dir('exemple_3') {
                        sh "docker build -f ./Dockerfile -t ${IMAGE_NAME} ."
                    }
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Lancer un nouveau conteneur en mode détaché et en liant le port 5000
                    sh "docker run  --name ${CONTAINER_NAME} -p ${PORT}:${PORT} ${IMAGE_NAME}"
                    
                    // Afficher l'URL de l'application
                    echo "Application running at http://localhost:${PORT}"
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline Terminé."
            sh "docker stop ${CONTAINER_NAME} || true"
            // Copier l'artefact spécifique vers un chemin local
            sh "mkdir -p  ${LOCAL_ARTIFACT_PATH})"
            sh "cp exemple_3/output.log ${LOCAL_ARTIFACT_PATH} || true"
        }
    }
}
