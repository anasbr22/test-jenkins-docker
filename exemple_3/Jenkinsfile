pipeline {
    agent any

    environment {
        IMAGE_NAME = 'calculator-app'
        CONTAINER_NAME = 'calculator-app-container'
        REGISTRY = 'docker.io'
        REPOSITORY = 'anasbr22/calculator-app'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // Cloner le repository contenant l'application
                    git url: 'https://github.com/anasbr22/test-jenkins-docker.git', branch: 'main'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    // Accéder au dossier 'exemple_3' et installer les dépendances
                    dir('exemple_3') {
                        sh 'npm install'
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Exécuter les tests unitaires (si vous avez un fichier de tests)
                    dir('exemple_3') {
                        sh 'npm test'
                    }
                }
            }
        }

        stage('Clean Up Docker') {
            steps {
                script {
                    // Supprimer le conteneur Docker s'il existe
                    sh """
                    if docker ps -a --format '{{.Names}}' | grep -q ${CONTAINER_NAME}; then
                        docker rm -f ${CONTAINER_NAME}
                    fi
                    """

                    // Supprimer l'image Docker s'il existe
                    sh """
                    if docker images --format '{{.Repository}}' | grep -q ${REGISTRY}/${REPOSITORY}; then
                        docker rmi -f ${REGISTRY}/${REPOSITORY}:${BUILD_ID}
                    fi
                    """
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Construire l'image Docker dans le dossier 'exemple_3'
                    dir('exemple_3') {
                        sh 'docker build -t ${REGISTRY}/${REPOSITORY}:${BUILD_ID} .'
                    }
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Lancer l'image Docker dans un conteneur
                    sh """
                    docker run -d -p 80:80 --name ${CONTAINER_NAME} ${REGISTRY}/${REPOSITORY}:${BUILD_ID}
                    """

                    // Afficher l'URL d'accès à l'application
                    echo "Application is running at http://localhost:80"
                }
            }
        }
    }

    post {
        always {
            // Nettoyer les images locales
            sh 'docker system prune -f'
        }
    }
}
